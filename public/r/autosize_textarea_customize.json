{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "autosize_textarea_customize",
  "type": "registry:ui",
  "title": "Autosize Textarea Customize",
  "description": "component for the Autosize Textarea Customize",
  "registryDependencies": [
    "http://localhost:3000/r/autosize_textarea_dependecies.json"
  ],
  "files": [
    {
      "path": "app/registry/autosize-textarea/usage/autosize-textarea-customize.tsx",
      "content": "'use client';\r\n\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as z from 'zod';\r\nimport * as React from 'react';\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from '@/components/ui/form';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { toast } from '@/components/ui/use-toast';\r\nimport { useAutosizeTextArea } from '@/components/ui/autosize-textarea';\r\nimport { LoadingButton } from '@/components/ui/loading-button';\r\n\r\nconst FormSchema = z.object({\r\n  bio: z\r\n    .string()\r\n    .min(10, {\r\n      message: 'Bio must be at least 10 characters.',\r\n    })\r\n    .max(160, {\r\n      message: 'Bio must not be longer than 30 characters.',\r\n    }),\r\n});\r\n\r\nconst AutosizeTextareaCustomize = () => {\r\n  const form = useForm<z.infer<typeof FormSchema>>({\r\n    resolver: zodResolver(FormSchema),\r\n  });\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const textAreaRef = React.useRef<HTMLTextAreaElement>(null);\r\n  const [triggerAutoSize, setTriggerAutoSize] = React.useState('');\r\n  useAutosizeTextArea({\r\n    textAreaRef: textAreaRef?.current,\r\n    triggerAutoSize: triggerAutoSize,\r\n    minHeight: 52,\r\n    maxHeight: 200,\r\n  });\r\n\r\n  /** You can use `form.watch` to trigger auto sizing. */\r\n  const bio = form.watch('bio');\r\n  React.useEffect(() => {\r\n    if (textAreaRef.current) {\r\n      setTriggerAutoSize(bio);\r\n    }\r\n  }, [bio]);\r\n\r\n  function onSubmit(data: z.infer<typeof FormSchema>) {\r\n    setLoading(true);\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      toast({\r\n        title: 'Your submitted data',\r\n        description: (\r\n          <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n            <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n          </pre>\r\n        ),\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"bio\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Bio</FormLabel>\r\n              <FormControl>\r\n                <Textarea\r\n                  placeholder=\"Tell us a little bit about yourself\"\r\n                  {...field}\r\n                  ref={textAreaRef}\r\n                />\r\n              </FormControl>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <LoadingButton loading={loading} type=\"submit\">\r\n          Submit\r\n        </LoadingButton>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\nexport default AutosizeTextareaCustomize;\r\n",
      "type": "registry:ui",
      "target": "components/spectrumui/autosize-textarea-customize.tsx"
    }
  ]
}