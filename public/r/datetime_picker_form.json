{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "datetime_picker_form",
  "type": "registry:ui",
  "title": "Datetime Picker Form",
  "description": "component for the Datetime Picker Form",
  "registryDependencies": [
    "datetime-picker"
  ],
  "files": [
    {
      "path": "app/registry/datetime-picker/usage/datetime-picker-form.tsx",
      "content": "'use client';\r\n\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as z from 'zod';\r\nimport * as React from 'react';\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from '@/components/ui/form';\r\nimport { toast } from '@/components/ui/use-toast';\r\nimport { LoadingButton } from '@/components/ui/loading-button';\r\nimport { InlineCode } from '@/components/ui/inline-code';\r\nimport { DateTimePicker } from '@/components/ui/datetime-picker';\r\n\r\nconst FormSchema = z.object({\r\n  datetime: z.date().optional(),\r\n});\r\n\r\nconst DEFAULT_VALUE = {\r\n  datetime: undefined,\r\n};\r\n\r\nconst DatetimePickerForm = () => {\r\n  const form = useForm<z.infer<typeof FormSchema>>({\r\n    defaultValues: DEFAULT_VALUE,\r\n    resolver: zodResolver(FormSchema),\r\n  });\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  function onSubmit(data: z.infer<typeof FormSchema>) {\r\n    setLoading(true);\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      toast({\r\n        title: 'Your submitted data',\r\n        description: (\r\n          <>\r\n            <p className=\"text-red-600\">\r\n              It is a <InlineCode>Date</InlineCode> object, the{' '}\r\n              <InlineCode>JSON.stringify</InlineCode> will show 0+ timezone. You need to parse to\r\n              your timezone to match your needs.\r\n            </p>\r\n            <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n              <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n            </pre>\r\n          </>\r\n        ),\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"datetime\"\r\n          render={({ field }) => (\r\n            <FormItem className=\"flex w-72 flex-col gap-2\">\r\n              <FormLabel htmlFor=\"datetime\">Date time</FormLabel>\r\n              <FormControl>\r\n                <DateTimePicker value={field.value} onChange={field.onChange} />\r\n              </FormControl>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <LoadingButton loading={loading} type=\"submit\">\r\n          Submit\r\n        </LoadingButton>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\nexport default DatetimePickerForm;\r\n",
      "type": "registry:ui",
      "target": "components/spectrumui/date-picker-form.tsx"
    }
  ]
}