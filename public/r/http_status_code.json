{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "http_status_code",
  "type": "registry:ui",
  "title": "HTTP Status Code",
  "description": "component for the HTTP Status Code",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "card",
    "input",
    "button"
  ],
  "files": [
    {
      "path": "app/registry/statuscode/demostatus.tsx",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertTriangle,\r\n  Info,\r\n  ArrowLeft,\r\n  ArrowRight,\r\n} from \"lucide-react\";\r\n\r\ninterface ResponseMessage {\r\n  statusCode: number;\r\n  category: string;\r\n  description: string;\r\n}\r\n\r\nconst statusCodes: ResponseMessage[] = [\r\n  { statusCode: 100, category: \"informational\", description: \"Continue\" },\r\n  {\r\n    statusCode: 101,\r\n    category: \"informational\",\r\n    description: \"Switching Protocols\",\r\n  },\r\n  { statusCode: 200, category: \"success\", description: \"OK\" },\r\n  { statusCode: 201, category: \"success\", description: \"Created\" },\r\n  { statusCode: 202, category: \"success\", description: \"Accepted\" },\r\n  { statusCode: 204, category: \"success\", description: \"No Content\" },\r\n  { statusCode: 300, category: \"redirection\", description: \"Multiple Choices\" },\r\n  {\r\n    statusCode: 301,\r\n    category: \"redirection\",\r\n    description: \"Moved Permanently\",\r\n  },\r\n  { statusCode: 302, category: \"redirection\", description: \"Found\" },\r\n  { statusCode: 304, category: \"redirection\", description: \"Not Modified\" },\r\n  { statusCode: 400, category: \"clientError\", description: \"Bad Request\" },\r\n  { statusCode: 401, category: \"clientError\", description: \"Unauthorized\" },\r\n  { statusCode: 403, category: \"clientError\", description: \"Forbidden\" },\r\n  { statusCode: 404, category: \"clientError\", description: \"Not Found\" },\r\n  {\r\n    statusCode: 500,\r\n    category: \"serverError\",\r\n    description: \"Internal Server Error\",\r\n  },\r\n  { statusCode: 501, category: \"serverError\", description: \"Not Implemented\" },\r\n  { statusCode: 502, category: \"serverError\", description: \"Bad Gateway\" },\r\n  {\r\n    statusCode: 503,\r\n    category: \"serverError\",\r\n    description: \"Service Unavailable\",\r\n  },\r\n  // Add more status codes here...\r\n];\r\n\r\n\r\nconst categoryColors = {\r\n  informational: \"bg-blue-500/10 border border-blue-800 text-blue-300\",\r\n  success: \"bg-green-500/10 border border-green-800  text-green-300\",\r\n  redirection: \"bg-yellow-500/10 border border-yellow-800 text-yellow-300\",\r\n  clientError: \"bg-orange-500/10 border border-orange-800 text-orange-300\",\r\n  serverError: \"bg-red-500/10 border border-red-800 text-red-300\"\r\n}\r\n\r\n\r\nconst categoryIcons: { [key in ResponseMessage[\"category\"]]: JSX.Element } = {\r\n  informational: <Info className=\"w-5 h-5\" />,\r\n  success: <CheckCircle className=\"w-5 h-5\" />,\r\n  redirection: <AlertTriangle className=\"w-5 h-5\" />,\r\n  clientError: <XCircle className=\"w-5 h-5\" />,\r\n  serverError: <XCircle className=\"w-5 h-5\" />,\r\n};\r\n\r\nexport default function Ststuscodelist() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n\r\n  const filteredCodes = statusCodes.filter(\r\n    (code) =>\r\n      code.statusCode.toString().includes(searchTerm) ||\r\n      code.category.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      code.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const totalPages = Math.ceil(filteredCodes.length / itemsPerPage);\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredCodes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-4xl mx-auto backdrop-blur-md  border border-white/20 shadow-xl\">\r\n      <CardContent className=\"p-6\">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Search status codes...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"mb-4\"\r\n        />\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div className=\"font-semibold\">Status Code</div>\r\n          <div className=\"font-semibold\">Category</div>\r\n          <div className=\"font-semibold\">Description</div>\r\n          {currentItems.map((item) => (\r\n            <>\r\n              <div\r\n                className={`flex items-center justify-center ${\r\n                  categoryColors[item.category as keyof typeof categoryColors]\r\n                } rounded-3xl w-28 `}\r\n              >\r\n                {item.statusCode}\r\n              </div>\r\n              <div className=\"flex items-center capitalize\">\r\n                {categoryIcons[item.category as keyof typeof categoryIcons]}\r\n                <span className=\"ml-2\">{item.category}</span>\r\n              </div>\r\n              <div>{item.description}</div>\r\n            </>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex justify-between items-center mt-4\">\r\n          <Button\r\n            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n            disabled={currentPage === 1}\r\n          >\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" /> Previous\r\n          </Button>\r\n          <span>\r\n            Page {currentPage} of {totalPages}\r\n          </span>\r\n          <Button\r\n            onClick={() =>\r\n              setCurrentPage((prev) => Math.min(prev + 1, totalPages))\r\n            }\r\n            disabled={currentPage === totalPages}\r\n          >\r\n            Next <ArrowRight className=\"w-4 h-4 ml-2\" />\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/spectrumui/http-status-code.tsx"
    }
  ]
}