{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "loading_button_dependencies",
  "type": "registry:ui",
  "title": "Loading Button Dependencies",
  "description": "component for the Loading Button Dependencies",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "lucide-react"
  ],
  "files": [
    {
      "path": "app/registry/spectrumui/loading-button-dependencies.tsx",
      "content": "import * as React from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { cn } from '@/lib/utils';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\nconst buttonVariants = cva(\r\n  'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\r\n        destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\r\n        outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\r\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\r\n        link: 'text-primary underline-offset-4 hover:underline',\r\n      },\r\n      size: {\r\n        default: 'h-10 px-4 py-2',\r\n        sm: 'h-9 rounded-md px-3',\r\n        lg: 'h-11 rounded-md px-8',\r\n        icon: 'h-10 w-10',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default',\r\n    },\r\n  },\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n  loading?: boolean;\r\n}\r\n\r\nconst LoadingButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, loading, children, ...props }, ref) => {\r\n    if (asChild) {\r\n      return (\r\n        <Slot ref={ref} {...props}>\r\n          <>\r\n            {React.Children.map(children as React.ReactElement, (child: React.ReactElement) => {\r\n              return React.cloneElement(child, {\r\n                className: cn(buttonVariants({ variant, size }), className),\r\n                children: (\r\n                  <>\r\n                    {loading && (\r\n                      <Loader2 className={cn('h-4 w-4 animate-spin', children && 'mr-2')} />\r\n                    )}\r\n                    {child.props.children}\r\n                  </>\r\n                ),\r\n              });\r\n            })}\r\n          </>\r\n        </Slot>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        disabled={loading}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        <>\r\n          {loading && <Loader2 className={cn('h-4 w-4 animate-spin', children && 'mr-2')} />}\r\n          {children}\r\n        </>\r\n      </button>\r\n    );\r\n  },\r\n);\r\nLoadingButton.displayName = 'LoadingButton';\r\n\r\nexport { LoadingButton, buttonVariants };\r\n",
      "type": "registry:ui",
      "target": "components/spectrumui/loading-button-dependencies.tsx"
    }
  ]
}