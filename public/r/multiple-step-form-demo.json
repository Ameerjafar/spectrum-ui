{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "multiple-step-form-demo",
  "type": "registry:ui",
  "title": "Multiple Step Form Demo",
  "description": "component for the Multiple Step Form Demo",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "sonner"
  ],
  "registryDependencies": [
    "button",
    "card",
    "input",
    "label",
    "radio-group",
    "textarea",
    "select"
  ],
  "files": [
    {
      "path": "app/registry/multistepform/multistepdemo.tsx",
      "content": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport { ChevronLeft, ChevronRight, Check, Loader2 } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport { toast } from \"sonner\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n\r\nconst steps = [\r\n  { id: \"personal\", title: \"Personal Info\" },\r\n  { id: \"professional\", title: \"Professional\" },\r\n  { id: \"goals\", title: \"Website Goals\" },\r\n  { id: \"design\", title: \"Design\" },\r\n  { id: \"budget\", title: \"Budget\" },\r\n  { id: \"requirements\", title: \"Requirements\" }\r\n]\r\n\r\n\r\ninterface FormData {\r\n  name: string;\r\n  email: string;\r\n  company: string;\r\n  profession: string;\r\n  experience: string;\r\n  industry: string;\r\n  primaryGoal: string;\r\n  targetAudience: string;\r\n  contentTypes: string[];\r\n  colorPreference: string;\r\n  stylePreference: string;\r\n  inspirations: string;\r\n  budget: string;\r\n  timeline: string;\r\n  features: string[];\r\n  additionalInfo: string;\r\n}\r\n\r\n\r\nconst fadeInUp = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: { opacity: 1, y: 0, transition: { duration: 0.3 } }\r\n}\r\n\r\nconst contentVariants = {\r\n  hidden: { opacity: 0, x: 50 },\r\n  visible: { opacity: 1, x: 0, transition: { duration: 0.3 } },\r\n  exit: { opacity: 0, x: -50, transition: { duration: 0.2 } }\r\n}\r\n\r\nconst OnboardingForm = () => {\r\n  const [currentStep, setCurrentStep] = useState(0)\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [formData, setFormData] = useState<FormData>({\r\n    name: \"\",\r\n    email: \"\",\r\n    company: \"\",\r\n    profession: \"\",\r\n    experience: \"\",\r\n    industry: \"\",\r\n    primaryGoal: \"\",\r\n    targetAudience: \"\",\r\n    contentTypes: [],\r\n    colorPreference: \"\",\r\n    stylePreference: \"\",\r\n    inspirations: \"\",\r\n    budget: \"\",\r\n    timeline: \"\",\r\n    features: [],\r\n    additionalInfo: \"\",\r\n  })\r\n\r\n  const updateFormData = (field: keyof FormData, value: string) => {\r\n    setFormData((prev) => ({ ...prev, [field]: value }))\r\n  }\r\n\r\n  const toggleFeature = (feature: string) => {\r\n    setFormData((prev) => {\r\n      const features = [...prev.features]\r\n      if (features.includes(feature)) {\r\n        return { ...prev, features: features.filter((f) => f !== feature) }\r\n      } else {\r\n        return { ...prev, features: [...features, feature] }\r\n      }\r\n    })\r\n  }\r\n\r\n  const toggleContentType = (type: string) => {\r\n    setFormData((prev) => {\r\n      const types = [...prev.contentTypes]\r\n      if (types.includes(type)) {\r\n        return { ...prev, contentTypes: types.filter((t) => t !== type) }\r\n      } else {\r\n        return { ...prev, contentTypes: [...types, type] }\r\n      }\r\n    })\r\n  }\r\n\r\n  const nextStep = () => {\r\n    if (currentStep < steps.length - 1) {\r\n      setCurrentStep((prev) => prev + 1)\r\n    }\r\n  }\r\n\r\n  const prevStep = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep((prev) => prev - 1)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setIsSubmitting(true)\r\n    \r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      console.log(\"Form submitted:\", formData)\r\n      toast.success(\"Form submitted successfully!\")\r\n      setIsSubmitting(false)\r\n    }, 1500)\r\n  }\r\n\r\n  // Check if step is valid for next button\r\n  const isStepValid = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return formData.name.trim() !== \"\" && formData.email.trim() !== \"\"\r\n      case 1:\r\n        return formData.profession.trim() !== \"\"  && formData.industry !== \"\"\r\n      case 2:\r\n        return formData.primaryGoal !== \"\"\r\n      case 3:\r\n        return formData.stylePreference !== \"\"\r\n      case 4:\r\n        return formData.budget !== \"\" && formData.timeline !== \"\"\r\n      default:\r\n        return true\r\n    }\r\n  }\r\n\r\n\r\n  const preventDefault = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-lg mx-auto py-8\">\r\n      {/* Progress indicator */}\r\n      <motion.div \r\n        className=\"mb-8\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <div className=\"flex justify-between mb-2\">\r\n          {steps.map((step, index) => (\r\n            <motion.div \r\n              key={index} \r\n              className=\"flex flex-col items-center\"\r\n              whileHover={{ scale: 1.1 }}\r\n            >\r\n              <motion.div\r\n                className={cn(\r\n                  \"w-4 h-4 rounded-full cursor-pointer transition-colors duration-300\",\r\n                  index < currentStep\r\n                    ? \"bg-primary\"\r\n                    : index === currentStep\r\n                      ? \"bg-primary ring-4 ring-primary/20\"\r\n                      : \"bg-muted\"\r\n                )}\r\n                onClick={() => {\r\n                  // Only allow going back or to completed steps\r\n                  if (index <= currentStep) {\r\n                    setCurrentStep(index)\r\n                  }\r\n                }}\r\n                whileTap={{ scale: 0.95 }}\r\n              />\r\n              <motion.span \r\n                className={cn(\r\n                  \"text-xs mt-1.5 hidden sm:block\",\r\n                  index === currentStep ? \"text-primary font-medium\" : \"text-muted-foreground\"\r\n                )}\r\n              >\r\n                {step.title}\r\n              </motion.span>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n        <div className=\"w-full bg-muted h-1.5 rounded-full overflow-hidden mt-2\">\r\n          <motion.div\r\n            className=\"h-full bg-primary\"\r\n            initial={{ width: 0 }}\r\n            animate={{ width: `${(currentStep / (steps.length - 1)) * 100}%` }}\r\n            transition={{ duration: 0.3 }}\r\n          />\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Form card */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5, delay: 0.2 }}\r\n      >\r\n        <Card className=\"border shadow-md rounded-3xl overflow-hidden\">\r\n          <div>\r\n            <AnimatePresence mode=\"wait\">\r\n              <motion.div\r\n                key={currentStep}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                variants={contentVariants}\r\n              >\r\n                {/* Step 1: Personal Info */}\r\n                {currentStep === 0 && (\r\n                  <>\r\n                    <CardHeader>\r\n                      <CardTitle>Tell us about yourself</CardTitle>\r\n                      <CardDescription>Let's start with some basic information</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"name\">Full Name</Label>\r\n                        <Input\r\n                          id=\"name\"\r\n                          placeholder=\"John Doe\"\r\n                          value={formData.name}\r\n                          onChange={(e) => updateFormData(\"name\", e.target.value)}\r\n                          className=\"transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                        />\r\n                      </motion.div>\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"email\">Email Address</Label>\r\n                        <Input\r\n                          id=\"email\"\r\n                          type=\"email\"\r\n                          placeholder=\"john@example.com\"\r\n                          value={formData.email}\r\n                          onChange={(e) => updateFormData(\"email\", e.target.value)}\r\n                          className=\"transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                        />\r\n                      </motion.div>\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"company\">Company/Organization (Optional)</Label>\r\n                        <Input\r\n                          id=\"company\"\r\n                          placeholder=\"Your Company\"\r\n                          value={formData.company}\r\n                          onChange={(e) => updateFormData(\"company\", e.target.value)}\r\n                          className=\"transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                        />\r\n                      </motion.div>\r\n                    </CardContent>\r\n                  </>\r\n                )}\r\n\r\n                {/* Step 2: Professional Background */}\r\n                {currentStep === 1 && (\r\n                  <>\r\n                    <CardHeader>\r\n                      <CardTitle>Professional Background</CardTitle>\r\n                      <CardDescription>Tell us about your professional experience</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"profession\">What's your profession?</Label>\r\n                        <Input\r\n                          id=\"profession\"\r\n                          placeholder=\"e.g. Designer, Developer, Marketer\"\r\n                          value={formData.profession}\r\n                          onChange={(e) => updateFormData(\"profession\", e.target.value)}\r\n                          className=\"transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                        />\r\n                      </motion.div>\r\n                      \r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"industry\">What industry do you work in?</Label>\r\n                        <Select value={formData.industry} onValueChange={(value) => updateFormData(\"industry\", value)}>\r\n                          <SelectTrigger id=\"industry\" className=\"transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\">\r\n                            <SelectValue placeholder=\"Select an industry\" />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"technology\">Technology</SelectItem>\r\n                            <SelectItem value=\"healthcare\">Healthcare</SelectItem>\r\n                            <SelectItem value=\"education\">Education</SelectItem>\r\n                            <SelectItem value=\"finance\">Finance</SelectItem>\r\n                            <SelectItem value=\"retail\">Retail</SelectItem>\r\n                            <SelectItem value=\"creative\">Creative Arts</SelectItem>\r\n                            <SelectItem value=\"other\">Other</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </motion.div>\r\n                    </CardContent>\r\n                  </>\r\n                )}\r\n\r\n                {/* Step 3: Website Goals */}\r\n                {currentStep === 2 && (\r\n                  <>\r\n                    <CardHeader>\r\n                      <CardTitle>Website Goals</CardTitle>\r\n                      <CardDescription>What are you trying to achieve with your website?</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label>What's the primary goal of your website?</Label>\r\n                        <RadioGroup\r\n                          value={formData.primaryGoal}\r\n                          onValueChange={(value) => updateFormData(\"primaryGoal\", value)}\r\n                          className=\"space-y-2\"\r\n                        >\r\n                          {[\r\n                            { value: \"showcase\", label: \"Showcase portfolio/work\" },\r\n                            { value: \"sell\", label: \"Sell products/services\" },\r\n                            { value: \"generate-leads\", label: \"Generate leads/inquiries\" },\r\n                            { value: \"provide-info\", label: \"Provide information\" },\r\n                            { value: \"blog\", label: \"Blog/content publishing\" }\r\n                          ].map((goal, index) => (\r\n                            <motion.div\r\n                              key={goal.value}\r\n                              className=\"flex items-center space-x-2 rounded-md border p-3 cursor-pointer hover:bg-accent transition-colors\"\r\n                              whileHover={{ scale: 1.02 }}\r\n                              whileTap={{ scale: 0.98 }}\r\n                              transition={{ duration: 0.2 }}\r\n                              initial={{ opacity: 0, x: -10 }}\r\n                              animate={{ \r\n                                opacity: 1, \r\n                                x: 0,\r\n                                transition: { delay: 0.1 * index, duration: 0.3 }\r\n                              }}\r\n                            >\r\n                              <RadioGroupItem value={goal.value} id={`goal-${index + 1}`} />\r\n                              <Label htmlFor={`goal-${index + 1}`} className=\"cursor-pointer w-full\">\r\n                                {goal.label}\r\n                              </Label>\r\n                            </motion.div>\r\n                          ))}\r\n                        </RadioGroup>\r\n                      </motion.div>\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"targetAudience\">Who is your target audience?</Label>\r\n                        <Textarea\r\n                          id=\"targetAudience\"\r\n                          placeholder=\"Describe your ideal visitors/customers\"\r\n                          value={formData.targetAudience}\r\n                          onChange={(e) => updateFormData(\"targetAudience\", e.target.value)}\r\n                          className=\"min-h-[80px] transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                        />\r\n                      </motion.div>\r\n                    </CardContent>\r\n                  </>\r\n                )}\r\n\r\n                {/* Step 4: Design Preferences */}\r\n                {currentStep === 3 && (\r\n                  <>\r\n                    <CardHeader>\r\n                      <CardTitle>Design Preferences</CardTitle>\r\n                      <CardDescription>Tell us about your aesthetic preferences</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label>What style do you prefer for your website?</Label>\r\n                        <RadioGroup\r\n                          value={formData.stylePreference}\r\n                          onValueChange={(value) => updateFormData(\"stylePreference\", value)}\r\n                          className=\"space-y-2\"\r\n                        >\r\n                          {[\r\n                            { value: \"modern\", label: \"Modern & Sleek\" },\r\n                            { value: \"minimalist\", label: \"Minimalist\" },\r\n                            { value: \"bold\", label: \"Bold & Creative\" },\r\n                            { value: \"corporate\", label: \"Corporate & Professional\" }\r\n                          ].map((style, index) => (\r\n                            <motion.div\r\n                              key={style.value}\r\n                              className=\"flex items-center space-x-2 rounded-md border p-3 cursor-pointer hover:bg-accent transition-colors\"\r\n                              whileHover={{ scale: 1.02 }}\r\n                              whileTap={{ scale: 0.98 }}\r\n                              transition={{ duration: 0.2 }}\r\n                              initial={{ opacity: 0, y: 10 }}\r\n                              animate={{ \r\n                                opacity: 1, \r\n                                y: 0,\r\n                                transition: { delay: 0.1 * index, duration: 0.3 }\r\n                              }}\r\n                            >\r\n                              <RadioGroupItem value={style.value} id={`style-${index + 1}`} />\r\n                              <Label htmlFor={`style-${index + 1}`} className=\"cursor-pointer w-full\">\r\n                                {style.label}\r\n                              </Label>\r\n                            </motion.div>\r\n                          ))}\r\n                        </RadioGroup>\r\n                      </motion.div>\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"inspirations\">Any websites you like for inspiration?</Label>\r\n                        <Textarea\r\n                          id=\"inspirations\"\r\n                          placeholder=\"List websites you admire or want to emulate\"\r\n                          value={formData.inspirations}\r\n                          onChange={(e) => updateFormData(\"inspirations\", e.target.value)}\r\n                          className=\"min-h-[80px] transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                        />\r\n                      </motion.div>\r\n                    </CardContent>\r\n                  </>\r\n                )}\r\n\r\n                {/* Step 5: Budget & Timeline */}\r\n                {currentStep === 4 && (\r\n                  <>\r\n                    <CardHeader>\r\n                      <CardTitle>Budget & Timeline</CardTitle>\r\n                      <CardDescription>Let's talk about your investment and timeline</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"budget\">What's your budget range? (USD)</Label>\r\n                        <Select value={formData.budget} onValueChange={(value) => updateFormData(\"budget\", value)}>\r\n                          <SelectTrigger id=\"budget\" className=\"transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\">\r\n                            <SelectValue placeholder=\"Select your budget\" />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"under-1000\">Under $1,000</SelectItem>\r\n                            <SelectItem value=\"1000-3000\">$1,000 - $3,000</SelectItem>\r\n                            <SelectItem value=\"3000-5000\">$3,000 - $5,000</SelectItem>\r\n                            <SelectItem value=\"5000-10000\">$5,000 - $10,000</SelectItem>\r\n                            <SelectItem value=\"over-10000\">Over $10,000</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </motion.div>\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label>What's your expected timeline?</Label>\r\n                        <RadioGroup\r\n                          value={formData.timeline}\r\n                          onValueChange={(value) => updateFormData(\"timeline\", value)}\r\n                          className=\"space-y-2\"\r\n                        >\r\n                          {[\r\n                            { value: \"asap\", label: \"ASAP\" },\r\n                            { value: \"1-month\", label: \"Within 1 month\" },\r\n                            { value: \"3-months\", label: \"1-3 months\" },\r\n                            { value: \"flexible\", label: \"Flexible\" }\r\n                          ].map((time, index) => (\r\n                            <motion.div\r\n                              key={time.value}\r\n                              className=\"flex items-center space-x-2 rounded-md border p-3 cursor-pointer hover:bg-accent transition-colors\"\r\n                              whileHover={{ scale: 1.02 }}\r\n                              whileTap={{ scale: 0.98 }}\r\n                              transition={{ duration: 0.2 }}\r\n                              initial={{ opacity: 0, x: -10 }}\r\n                              animate={{ \r\n                                opacity: 1, \r\n                                x: 0,\r\n                                transition: { delay: 0.1 * index, duration: 0.3 }\r\n                              }}\r\n                            >\r\n                              <RadioGroupItem value={time.value} id={`time-${index + 1}`} />\r\n                              <Label htmlFor={`time-${index + 1}`} className=\"cursor-pointer w-full\">\r\n                                {time.label}\r\n                              </Label>\r\n                            </motion.div>\r\n                          ))}\r\n                        </RadioGroup>\r\n                      </motion.div>\r\n                    </CardContent>\r\n                  </>\r\n                )}\r\n\r\n                {/* Step 6: Additional Requirements */}\r\n                {currentStep === 5 && (\r\n                  <>\r\n                    <CardHeader>\r\n                      <CardTitle>Additional Requirements</CardTitle>\r\n                      <CardDescription>Any other specific needs for your website?</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label>Which features do you need?</Label>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                          {[\r\n                            \"Contact Form\",\r\n                            \"Blog/News\",\r\n                            \"E-commerce\",\r\n                            \"User Accounts\",\r\n                            \"Search Functionality\",\r\n                            \"Social Media Integration\",\r\n                            \"Newsletter Signup\",\r\n                            \"Analytics\",\r\n                          ].map((feature, index) => (\r\n                            <motion.div\r\n                              key={feature}\r\n                              className=\"flex items-center space-x-2 rounded-md border p-3 cursor-pointer hover:bg-accent transition-colors\"\r\n                              whileHover={{ scale: 1.02 }}\r\n                              whileTap={{ scale: 0.98 }}\r\n                              transition={{ duration: 0.2 }}\r\n                              initial={{ opacity: 0, y: 10 }}\r\n                              animate={{ \r\n                                opacity: 1, \r\n                                y: 0,\r\n                                transition: { delay: 0.05 * index, duration: 0.3 }\r\n                              }}\r\n                              onClick={() => toggleFeature(feature.toLowerCase())}\r\n                            >\r\n                              <Checkbox\r\n                                id={`feature-${feature}`}\r\n                                checked={formData.features.includes(feature.toLowerCase())}\r\n                                onCheckedChange={() => toggleFeature(feature.toLowerCase())}\r\n                              />\r\n                              <Label htmlFor={`feature-${feature}`} className=\"cursor-pointer w-full\">\r\n                                {feature}\r\n                              </Label>\r\n                            </motion.div>\r\n                          ))}\r\n                        </div>\r\n                      </motion.div>\r\n                      <motion.div variants={fadeInUp} className=\"space-y-2\">\r\n                        <Label htmlFor=\"additionalInfo\">Anything else we should know?</Label>\r\n                        <Textarea\r\n                          id=\"additionalInfo\"\r\n                          placeholder=\"Any additional requirements or information\"\r\n                          value={formData.additionalInfo}\r\n                          onChange={(e) => updateFormData(\"additionalInfo\", e.target.value)}\r\n                          className=\"min-h-[80px] transition-all duration-300 focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                        />\r\n                      </motion.div>\r\n                    </CardContent>\r\n                  </>\r\n                )}\r\n              </motion.div>\r\n            </AnimatePresence>\r\n\r\n            <CardFooter className=\"flex justify-between pt-6 pb-4\">\r\n              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  onClick={prevStep}\r\n                  disabled={currentStep === 0}\r\n                  className=\"flex items-center gap-1 transition-all duration-300 rounded-2xl\"\r\n                >\r\n                  <ChevronLeft className=\"h-4 w-4\" /> Back\r\n                </Button>\r\n              </motion.div>\r\n              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={currentStep === steps.length - 1 ? handleSubmit : nextStep}\r\n                  disabled={!isStepValid() || isSubmitting}\r\n                  className={cn(\r\n                    \"flex items-center gap-1 transition-all duration-300 rounded-2xl\",\r\n                    currentStep === steps.length - 1 ? \"\" : \"\"\r\n                  )}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <>\r\n                      <Loader2 className=\"h-4 w-4 animate-spin\" /> Submitting...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {currentStep === steps.length - 1 ? \"Submit\" : \"Next\"}\r\n                      {currentStep === steps.length - 1 ? <Check className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </motion.div>\r\n            </CardFooter>\r\n          </div>\r\n        </Card>\r\n      </motion.div>\r\n      \r\n      {/* Step indicator */}\r\n      <motion.div \r\n        className=\"mt-4 text-center text-sm text-muted-foreground\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.5, delay: 0.4 }}\r\n      >\r\n        Step {currentStep + 1} of {steps.length}: {steps[currentStep].title}\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OnboardingForm",
      "type": "registry:ui",
      "target": "components/spectrumui/multistepformdemo.tsx"
    }
  ]
}