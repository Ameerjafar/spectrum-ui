{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "responsive_modal_dependencies",
  "type": "registry:ui",
  "title": "Responsive Modal Dependencies",
  "description": "component for the Responsive Modal Dependencies",
  "dependencies": [
    "@radix-ui/react-dialog",
    "class-variance-authority",
    "lucide-react"
  ],
  "files": [
    {
      "path": "app/registry/spectrumui/responsive-modal-dependencies.tsx",
      "content": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { X } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst ResponsiveModal = DialogPrimitive.Root;\r\n\r\nconst ResponsiveModalTrigger = DialogPrimitive.Trigger;\r\n\r\nconst ResponsiveModalClose = DialogPrimitive.Close;\r\n\r\nconst ResponsiveModalPortal = DialogPrimitive.Portal;\r\n\r\nconst ResponsiveModalOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    className={cn(\r\n      'fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\r\n      className,\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n));\r\nResponsiveModalOverlay.displayName = DialogPrimitive.Overlay.displayName;\r\n\r\nconst ResponsiveModalVariants = cva(\r\n  cn(\r\n    'fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500 overflow-y-auto',\r\n    'lg:left-[50%] lg:top-[50%] lg:grid lg:w-full lg:max-w-lg lg:translate-x-[-50%] lg:translate-y-[-50%] lg:border lg:duration-200 lg:data-[state=open]:animate-in lg:data-[state=closed]:animate-out lg:data-[state=closed]:fade-out-0 lg:data-[state=open]:fade-in-0 lg:data-[state=closed]:zoom-out-95 lg:data-[state=open]:zoom-in-95 lg:data-[state=closed]:slide-out-to-left-1/2 lg:data-[state=closed]:slide-out-to-top-[48%] lg:data-[state=open]:slide-in-from-left-1/2 lg:data-[state=open]:slide-in-from-top-[48%] lg:rounded-xl',\r\n  ),\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: 'inset-x-0 top-0 border-b rounded-b-xl max-h-[90%] lg:h-fit data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top',\r\n        bottom:\r\n          'inset-x-0 bottom-0 border-t lg:h-fit max-h-[90%] rounded-t-xl data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom',\r\n        left: 'inset-y-0 left-0 h-full lg:h-fit w-3/4 border-r rounded-r-xl data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm',\r\n        right:\r\n          'inset-y-0 right-0 h-full lg:h-fit w-3/4 border-l rounded-l-xl data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      side: 'bottom',\r\n    },\r\n  },\r\n);\r\n\r\ninterface ResponsiveModalContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>,\r\n    VariantProps<typeof ResponsiveModalVariants> {}\r\n\r\nconst ResponsiveModalContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  ResponsiveModalContentProps\r\n>(({ side = 'bottom', className, children, ...props }, ref) => (\r\n  <ResponsiveModalPortal>\r\n    <ResponsiveModalOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(ResponsiveModalVariants({ side }), className)}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ResponsiveModalClose className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </ResponsiveModalClose>\r\n    </DialogPrimitive.Content>\r\n  </ResponsiveModalPortal>\r\n));\r\nResponsiveModalContent.displayName = DialogPrimitive.Content.displayName;\r\n\r\nconst ResponsiveModalHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div className={cn('flex flex-col space-y-2 text-center sm:text-left', className)} {...props} />\r\n);\r\nResponsiveModalHeader.displayName = 'ResponsiveModalHeader';\r\n\r\nconst ResponsiveModalFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\r\n    {...props}\r\n  />\r\n);\r\nResponsiveModalFooter.displayName = 'ResponsiveModalFooter';\r\n\r\nconst ResponsiveModalTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn('text-lg font-semibold text-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nResponsiveModalTitle.displayName = DialogPrimitive.Title.displayName;\r\n\r\nconst ResponsiveModalDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nResponsiveModalDescription.displayName = DialogPrimitive.Description.displayName;\r\n\r\nexport {\r\n  ResponsiveModal,\r\n  ResponsiveModalPortal,\r\n  ResponsiveModalOverlay,\r\n  ResponsiveModalTrigger,\r\n  ResponsiveModalClose,\r\n  ResponsiveModalContent,\r\n  ResponsiveModalHeader,\r\n  ResponsiveModalFooter,\r\n  ResponsiveModalTitle,\r\n  ResponsiveModalDescription,\r\n};\r\n",
      "type": "registry:ui",
      "target": "components/spectrumui/responsive-modal-dependencies.tsx"
    }
  ]
}